---
- name: Ensure we have package facts
  ansible.builtin.package_facts:
    manager: auto
  when:
    - ansible_facts.packages is not defined

- name: Set installed PHP version
  vars:
    package: php-fpm
  ansible.builtin.set_fact:
    php_version_installed: "{{ ansible_facts.packages[package][0].version.split('.')[0:2] | join('.') }}"
    php_version_installed_flat: "{{ ansible_facts.packages[package][0].version.split('.')[0:2] | join('.') | replace('.', '') }}"
  when:
    - package in ansible_facts.packages.keys()

- name: Include Debian vars
  ansible.builtin.include_vars: "debian.yml"
  when: ansible_os_family|lower == "debian"

- name: Set lists of required variables
  ansible.builtin.set_fact:
    php_required_strings:
      - php_version
      - php_version_flat
      - php_config_ini_path
      - php_fpm_config_path
      - php_fpm_daemon
      - php_ini_memory_limit
      - php_ini_post_max_size
      - php_ini_upload_max_filesize
      - php_ini_user_ini_filename
      - php_conf_session_save_handler
      - php_conf_session_save_path
      - php_conf_soap_wsdl_cache_dir
      - php_fpm_config_pool_path
      - php_fpm_socket_path
      - php_fpm_site_errorlog
      - php_fpm_slowlog
    php_required_ints:
      - php_ini_rlimit_files
      - php_ini_max_execution_time
      - php_ini_max_input_vars
      - php_ini_user_ini_cache_ttl
      - php_ini_opcache_force_restart_timeout
      - php_ini_opcache_interned_strings_buffer
      - php_ini_opcache_log_verbosity_level
      - php_ini_opcache_max_accelerated_files
      - php_ini_opcache_memory_consumption
      - php_ini_opcache_revalidate_freq
      - php_ini_zlib_output_compression_level

- name: Check required PHP variables (strings)
  ansible.builtin.fail:
    msg: |
      Invalid value for variable for '{{ item }}': {{ lookup('vars', item) }}

      Supported types  : String
      Supported values : Any non-null string
  when: >-
    lookup('vars', item) is not string
    or lookup('vars', item) == 0
  with_items: "{{ php_required_strings }}"

- name: Check required PHP variables (integers)
  ansible.builtin.fail:
    msg: |
      Invalid value for variable for '{{ item }}': {{ lookup('vars', item) }}

      Supported types  : Integer
      Supported values : A number between 0-65535
  when: >-
    lookup('vars', item)|int < 0
    or lookup('vars', item)|int > 65535
  with_items: "{{ php_required_ints }}"

- name: Check required PHP variables (php_packages)
  ansible.builtin.fail:
    msg: |
      Invalid value for variable for 'php_packages': {{ php_packages }}

      Supported types  : List, string
      Supported values : Any non-null list or string
  when: >-
    php_packages is not iterable
    or php_packages == 0

- name: Set and sanitize dependent RedHat vars
  ansible.builtin.set_fact:
    apache_config_path: /etc/httpd/conf.d
  when:
    - ansible_os_family|lower == "redhat"
    - apache_config_path is undefined

- name: Set and sanitize dependent Debian vars
  ansible.builtin.set_fact:
    apache_config_path: /etc/apache2/conf-enabled
  when:
    - ansible_os_family|lower == "debian"
    - apache_config_path is undefined

- name: Check variable 'systemd_restart_setting'
  ansible.builtin.fail:
    msg: |
      Invalid value for variable 'systemd_restart_setting': '{{ systemd_restart_setting }}'

      Supported types  : String
      Supported values : "no", "on-success", "on-failure", "on-abnormal",
                         "on-watchdog", "on-abort", "always"
  failed_when: >-
    systemd_restart_setting not in
    ['no', 'on-success', 'on-failure', 'on-abnormal',
    'on-watchdog', 'on-abort', 'always']
    or systemd_restart_setting is not string
    or systemd_restart_setting == 0
  when: >-
    (php_systemd_restart is defined
    and php_systemd_restart)
    or (systemd_restart is defined
    and systemd_restart)

- name: Set PHP switcher
  ansible.builtin.set_fact:
    php_version_switch: true
  when: 
    - php_version_installed is defined
    - php_version != php_version_installed

- name: Remove php-sodium when PHP 5.6
  ansible.builtin.set_fact:
    php_packages: "{{ php_packages | reject('search', 'php-sodium') | list }}"
  when: php_version == '5.6'
